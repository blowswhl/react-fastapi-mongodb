{"ast":null,"code":"var _jsxFileName = \"/root/project/frontend/src/pages/SignUpPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUpPage = () => {\n  _s();\n  const [username, setUsername] = useState(\"\"); // 아이디 상태\n  const [password, setPassword] = useState(\"\"); // 비밀번호 상태\n  const [email, setEmail] = useState(\"\"); // 이메일 상태\n  const [selectedTeam, setSelectedTeam] = useState(\"\"); //선택된 팀\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false); //드롭다운 열림/닫힘상태\n\n  const handleTeamSelect = team => {\n    setSelectedTeam(team); //선택한 팀 설정 \n    setIsDropdownOpen(false); //드롭다운 닫기\n  };\n\n  // 회원가입 요청 핸들러\n  const handleSubmit = async e => {\n    e.preventDefault(); // 페이지 새로고침 방지\n\n    // 사용자 입력값을 서버로 전송할 데이터 객체로 생성\n    const userData = {\n      username,\n      password,\n      email\n    };\n    try {\n      // 백엔드 서버로 POST 요청\n      const response = await fetch(\"http://localhost:8000/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(userData)\n      });\n      if (response.ok) {\n        // 성공적으로 회원가입 처리\n        const data = await response.json();\n        alert(\"회원가입 성공: \" + data.message);\n      } else {\n        // 오류 처리\n        const errorData = await response.json();\n        alert(\"회원가입 실패: \" + errorData.message);\n      }\n    } catch (error) {\n      // 네트워크 오류 처리\n      console.error(\"Error:\", error);\n      alert(\"서버와 통신 중 오류가 발생했습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SignUpPage\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC544\\uC774\\uB514\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"\\uC774\\uBA54\\uC77C\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"userType\",\n        value: \"developer\",\n        checked: userType === \"developer\",\n        onChange: e => setUserType(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), \" \\uAC1C\\uBC1C\\uD300\", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(SignUpPage, \"ucmq3cZW12MlDdT4T01hNhNEwLA=\");\n_c = SignUpPage;\nexport default SignUpPage;\nvar _c;\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SignUpPage","_s","username","setUsername","password","setPassword","email","setEmail","selectedTeam","setSelectedTeam","isDropdownOpen","setIsDropdownOpen","handleTeamSelect","team","handleSubmit","e","preventDefault","userData","response","fetch","method","headers","body","JSON","stringify","ok","data","json","alert","message","errorData","error","console","className","children","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","name","checked","userType","setUserType","_c","$RefreshReg$"],"sources":["/root/project/frontend/src/pages/SignUpPage.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst SignUpPage = () => {\n    const [username, setUsername] = useState(\"\"); // 아이디 상태\n    const [password, setPassword] = useState(\"\"); // 비밀번호 상태\n    const [email, setEmail] = useState(\"\"); // 이메일 상태\n    const [selectedTeam, setSelectedTeam] = useState(\"\"); //선택된 팀\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false); //드롭다운 열림/닫힘상태\n\n\n    const handleTeamSelect = (team) => {\n\n        setSelectedTeam(team); //선택한 팀 설정 \n        setIsDropdownOpen(false); //드롭다운 닫기\n\n    };\n\n    // 회원가입 요청 핸들러\n    const handleSubmit = async (e) => {\n        e.preventDefault(); // 페이지 새로고침 방지\n\n        // 사용자 입력값을 서버로 전송할 데이터 객체로 생성\n        const userData = {\n            username,\n            password,\n            email,\n        };\n\n        try {\n            // 백엔드 서버로 POST 요청\n            const response = await fetch(\"http://localhost:8000/register\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(userData),\n            });\n\n            if (response.ok) {\n                // 성공적으로 회원가입 처리\n                const data = await response.json();\n                alert(\"회원가입 성공: \" + data.message);\n            } else {\n                // 오류 처리\n                const errorData = await response.json();\n                alert(\"회원가입 실패: \" + errorData.message);\n            }\n        } catch (error) {\n            // 네트워크 오류 처리\n            console.error(\"Error:\", error);\n            alert(\"서버와 통신 중 오류가 발생했습니다.\");\n        }\n    };\n\n    return (\n        <div className=\"SignUpPage\">\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"아이디\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"비밀번호\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <input\n                    type=\"email\"\n                    placeholder=\"이메일\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n                <input\n                    type=\"radio\"\n                    name=\"userType\"\n                    value=\"developer\"\n                    checked={userType === \"developer\"}\n                    onChange={(e) => setUserType(e.target.value)}\n                /> 개발팀\n                <button type=\"submit\">회원가입</button>\n            </form>\n        </div>\n    );\n};\n\nexport default SignUpPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}